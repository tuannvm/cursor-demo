name: TRD to GitHub Issues
on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  create-issues-from-trd:
    if: github.event.issue.pull_request != null && (contains(github.event.comment.body, '@cursor') || contains(github.event.comment.body, '/create-issues'))
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout PR
      uses: actions/checkout@v4
      
    - name: Install Cursor CLI
      run: |
        curl https://cursor.com/install -fsS | bash
        echo "$HOME/.cursor/bin" >> $GITHUB_PATH


    - name: Generate Issues from TRD
      env:
        CURSOR_API_KEY: ${{ secrets.CURSOR_API_KEY }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Get TRD files from PR and read their contents directly from filesystem
        TRD_FILES=$(gh pr diff ${{ github.event.issue.number }} --name-only | grep -E '\.(md|txt)$')
        echo "Found TRD files: $TRD_FILES"
        
        if [[ -z "$TRD_FILES" ]]; then
          echo "❌ No TRD files found in PR"
          gh pr comment ${{ github.event.issue.number }} --body "❌ No TRD files (.md or .txt) found in this PR"
          exit 1
        fi
        
        # Read TRD file contents directly from the repository
        TRD_CONTENT=""
        for file in $TRD_FILES; do
          if [[ -f "$file" ]]; then
            echo "Reading $file..."
            TRD_CONTENT="$TRD_CONTENT\n\n=== $file ===\n$(cat "$file")"
          fi
        done
        
        # Parse repository owner and name
        REPO_OWNER=$(echo "${{ github.repository }}" | cut -d'/' -f1)
        REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
        
        # Run cursor agent to create issues via GitHub CLI
        cursor-agent -p "
        TASK: Analyze TRD content and create GitHub issues using ONLY GitHub CLI commands.
        
        TRD Content: $TRD_CONTENT
        Repository: $REPO_OWNER/$REPO_NAME
        
        STRICT REQUIREMENTS:
        1. Use 'gh issue create' commands ONLY - no file creation, no templates
        2. Create issues directly in the live GitHub repository
        3. Each issue must have: title, body, labels
        4. After each successful 'gh issue create', output: 'CREATED_ISSUE_URL: [returned_url]'
        
        EXAMPLE COMMAND:
        gh issue create --title '[PLANNING] Feature Name' --body 'Detailed description...' --label 'trd-generated,planning' --repo '$REPO_OWNER/$REPO_NAME'
        
        ABSOLUTELY FORBIDDEN:
        - Creating .md files or templates
        - Using Write, Edit, or MultiEdit tools
        - Generating code or documentation files
        - Any git commits or file modifications
        
        EXECUTE: Run gh issue create commands for each requirement you identify from the TRD.
        " 2>&1 | tee cursor_output.log
        
        # Extract issue URLs from cursor output and comment on PR
        if grep -q "CREATED_ISSUE_URL:" cursor_output.log; then
          CREATED_ISSUES=$(grep "CREATED_ISSUE_URL:" cursor_output.log | sed 's/.*CREATED_ISSUE_URL: //' | tr '\n' ' ')
          gh pr comment ${{ github.event.issue.number }} --body "✅ TRD analysis complete - Created issues: $CREATED_ISSUES"
        else
          gh pr comment ${{ github.event.issue.number }} --body "❌ TRD analysis failed - Check workflow logs for details"
          exit 1
        fi
