name: TRD to GitHub Issues
on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  create-issues-from-trd:
    if: github.event.issue.pull_request != null && (contains(github.event.comment.body, '@cursor') || contains(github.event.comment.body, 'create-issues'))
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout PR
      uses: actions/checkout@v4
      
    - name: Install Cursor CLI
      run: |
        curl https://cursor.com/install -fsS | bash
        echo "$HOME/.cursor/bin" >> $GITHUB_PATH


    - name: Extract TRD Content
      id: extract-trd
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Get TRD files from PR
        TRD_FILES=$(gh pr diff ${{ github.event.issue.number }} --name-only | grep -E '\.(md|txt)$')
        echo "Found TRD files: $TRD_FILES"
        
        if [[ -z "$TRD_FILES" ]]; then
          echo "❌ No TRD files found in PR"
          gh pr comment ${{ github.event.issue.number }} --body "❌ No TRD files (.md or .txt) found in this PR"
          exit 1
        fi
        
        # Read TRD file contents and save to temporary file
        echo "=== TRD CONTENT ===" > trd_content.txt
        for file in $TRD_FILES; do
          if [[ -f "$file" ]]; then
            echo "Reading $file..."
            echo "" >> trd_content.txt
            echo "=== $file ===" >> trd_content.txt
            cat "$file" >> trd_content.txt
          fi
        done
        
        echo "TRD content extracted to trd_content.txt"

    - name: Create GitHub Issues
      env:
        CURSOR_API_KEY: ${{ secrets.CURSOR_API_KEY }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Parse repository owner and name
        REPO_OWNER=$(echo "${{ github.repository }}" | cut -d'/' -f1)
        REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
        
        # Run cursor agent to create issues via GitHub CLI
        cursor-agent -p "
        You are a GitHub issue creation bot. Your ONLY job is to run bash commands that create GitHub issues.
        
        Repository: $REPO_OWNER/$REPO_NAME
        TRD File: ./trd_content.txt
        
        WHAT TO DO:
        1. Use Bash tool to read ./trd_content.txt file
        2. Analyze the TRD content
        3. For each major requirement/feature, run this bash command:
           gh issue create --title 'Issue Title' --body 'Issue Description' --label 'trd-generated,planning' --repo $REPO_OWNER/$REPO_NAME
        4. Capture the returned GitHub issue URL from each command
        5. Output: 'CREATED_ISSUE_URL: [the_actual_url_returned]'
        
        CRITICAL RULES:
        - Only use Bash tool to run gh commands and read files
        - Never use Write, Edit, MultiEdit, or file creation tools
        - Never create .md files or templates
        - Never commit files to git
        - Only execute gh issue create commands
        
        START: Read ./trd_content.txt then create issues using gh commands.
        " 2>&1 | tee cursor_output.log

    - name: Report Results
      if: always()
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Extract issue URLs from cursor output and comment on PR
        if grep -q "CREATED_ISSUE_URL:" cursor_output.log; then
          CREATED_ISSUES=$(grep "CREATED_ISSUE_URL:" cursor_output.log | sed 's/.*CREATED_ISSUE_URL: //' | tr '\n' ' ')
          gh pr comment ${{ github.event.issue.number }} --body "✅ TRD analysis complete - Created issues: $CREATED_ISSUES"
        else
          gh pr comment ${{ github.event.issue.number }} --body "❌ TRD analysis failed - Check workflow logs for details"
          exit 1
        fi
